<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerSymbol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scPlayerInit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement 
//gain speed
move_f += keyboard_check(forward) * accel;
move_f -= keyboard_check(back) * accel;
move_s += keyboard_check(left) * accel;
move_s -= keyboard_check(right) * accel;

//cap speed at max
move_f = clamp(move_f, -maxspeed, maxspeed);
move_s = clamp(move_s, -maxspeed, maxspeed);

//slow down
if (!keyboard_check(forward) &amp;&amp; !keyboard_check(back) &amp;&amp; move_f != 0)
    move_f -= accel * sign(move_f);
if (!keyboard_check(left) &amp;&amp; !keyboard_check(right) &amp;&amp; move_s != 0)
    move_s -= accel * sign(move_s);

//Apply movement
hsp = lengthdir_x(move_f, direction) + lengthdir_x(move_s, direction+90);
vsp = lengthdir_y(move_f, direction) + lengthdir_y(move_s, direction+90);

//Collisions
// Horizontal collision

if place_meeting(x+hsp,y,oWall)
    {
    while (!place_meeting(x+sign(hsp),y,oWall))
        {
        x += sign(hsp)
        }
        hsp = 0
    }
x += hsp;

// Vertical Colision
if place_meeting(x,y+vsp,oWall)
    {
    while (!place_meeting(x,y+sign(vsp),oWall))
        {
        y += sign(vsp)
        }
    vsp = 0  
    }
y += vsp;

// Player gives off light
d3d_light_define_point(1, x, y, player_height / 2, 140, c_white);
d3d_light_enable(1,true);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mouse Look
if (!mouseFree)
{
window_set_cursor(cr_none);
direction -= (display_mouse_get_x() - display_get_width()/2) / 8;
zdir -= (display_mouse_get_y() - display_get_height()/2) / 10;

//clamp zdir
var ztomax = 70;
zdir = clamp(zdir, -ztomax, ztomax);

//set xto and yto
var d = degtorad(direction);
var zd = degtorad(zdir);
xto = x + cos(d) * abs(sin(zd) + sign(-zdir));
yto = y - sin(d) * abs(sin(zd) + sign(-zdir));
zto = (player_height) + sin(zd);

//reset mouse position
var centerx = display_get_width()/2;
var centery = display_get_height()/2;
display_mouse_set(centerx, centery);
} else
{
 window_set_cursor(cr_arrow);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw camera
d3d_set_projection_ext(x,y,player_height,xto,yto,zto,0,0,1,75,16/9,1,99999)

// head bob

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
